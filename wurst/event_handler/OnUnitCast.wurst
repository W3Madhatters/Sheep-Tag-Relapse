package OnUnitCast
import Constants
import Frenzy
import Utils

function onCast()
    let abil = GetSpellAbilityId()
    let caster = GetTriggerUnit()
    if (caster.hasAbility(abil) and not caster.getAbility(abil).getField(ABILITY_BF_ITEM_ABILITY) and not caster.isDummy())
        let level = caster.getAbilityLevel(abil)
        // print("Caster: " + caster.getName() + " " + GetAbilityName(abil) + " " + level.toString() + " " + caster.getAbilityCooldown(abil, level - 1).toString())
        if (caster.hasAbility(STAbilityIds.FRENZY) and 
            caster.getAbilityManaCost(abil, 0) > 0)
            castFrenzy(caster, caster.getAbilityLevel(STAbilityIds.FRENZY))
        if (caster.inventorySize() > 0 and caster.getAbilityCooldown(abil, level - 1) > 0)
            let numRings = caster.itemCount(STItemIds.RING).toReal()
            if (numRings > 0)
                BlzSetUnitAbilityCooldown(caster, abil, level - 1, BlzGetAbilityCooldown(abil, level - 1) * Pow(.75, numRings))
    else if (abil == STAbilityIds.REFRESHMENT)
        caster.resetCooldown()

init   
    CreateTrigger()..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT)..addAction(() -> onCast())
        